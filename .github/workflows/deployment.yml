name: Code Build and Deployment on K8s 

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Checkov
        run: pip install checkov

      - name: Run Checkov on Infrastructure Code
        continue-on-error: true
        run: |
          checkov -d ./k8s \
            --framework terraform,kubernetes,cloudformation \
            --output json \
            --output-file checkov-report.json \
            --skip-check BC.PipelineMissing

      - name: Upload Checkov Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: checkov-reports
          path: checkov-report.json

      - name: Set up Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/smart-health-monitoring-app:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/smart-health-monitoring-app:${{ github.sha }}

      - name: Run Dockle security scan
        id: dockle
        uses: goodwithtech/dockle-action@main
        with:
          image: '${{ secrets.DOCKER_USERNAME }}/smart-health-monitoring-app:${{ github.sha }}'  # Replace with your image name
          format: 'json'  # Store the output in JSON format for better readability and parsing
          output: 'dockle.json'
          exit-code: '1'  # Exit code to return if vulnerabilities are found (non-zero will fail the job)
          exit-level: 'warn'  # Fail the job if vulnerabilities of 'warn' level or higher are found
          # ignore: 'CIS-DI-0001,DKL-DI-0006'  # Ignore specific rule IDs
        continue-on-error: true  # Allows the job to continue even if Dockle finds vulnerabilities

      - name: Upload Dockle Scan Results as Artifact
        uses: actions/upload-artifact@v4
        if: always()  # Always run this step regardless of the job's outcome
        with:
          name: dockle-scan-results  # Artifact name
          path: dockle.json  # Path to the Dockle scan results file
          # if-no-files-found: warn  # Warn if no files are found
          # include-hidden-files: false

      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      - name: Update GitOps
        run: |
          yq eval ".spec.template.spec.containers[0].image = \"${{ secrets.DOCKER_USERNAME }}/smart-health-monitoring-app:${{ github.sha }}\"" -i k8s/smart-health-app/Deployment.yml

      - name: Commit and Push GitOps
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add k8s/smart-health-app/Deployment.yml
          git commit -m "Update image to ${{ secrets.DOCKER_USERNAME }}/smart-health-monitoring-app:${{ github.sha }}"
          git push origin main
        env:
            GITHUB_TOKEN: ${{ secrets.TOKEN }}

